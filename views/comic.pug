<!DOCTYPE html>
<html lang="id" class="scroll-smooth">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>COMICKU - Baca Manhwa Gratis</title>
  <link rel="icon" href="/images/favicon.ico">
  <link rel="stylesheet" href="https://cdn.tailwindcss.com/3.4.17">
  <script>
    tailwind.config = {
      darkMode: 'class',
      theme: {
        extend: {
          colors: {
            primary: { 50: '#f5f3ff', 100: '#ede9fe', 200: '#ddd6fe', 300: '#c4b5fd', 400: '#a78bfa', 500: '#8b5cf6', 600: '#7c3aed', 700: '#6d28d9', 800: '#5b21b6', 900: '#4c1d95' }
          },
          fontFamily: { 'sans': ['Inter', 'system-ui', 'sans-serif'] }
        }
      }
    }
  </script>
  <style>
    /* Custom styles for smaller, more aesthetic buttons */
    .btn {
      @apply px-3 py-1.5 text-xs font-medium rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2;
    }
    
    .btn-primary {
      @apply bg-primary-600 text-white hover:bg-primary-700 focus:ring-primary-500;
    }
    
    .btn-secondary {
      @apply bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600 focus:ring-gray-500;
    }
    
    .search-input {
      @apply w-full px-3 py-1.5 pl-9 pr-4 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-colors duration-200 text-sm;
    }
    
    .section-title {
      @apply flex justify-between items-center mb-4;
    }
    
    .section-title h2 {
      @apply text-xl font-bold;
    }
    
    .slider-nav {
      @apply absolute top-1/2 transform -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white rounded-full w-8 h-8 flex items-center justify-center text-sm transition-all duration-200 z-10;
    }
    
    .slider-prev {
      @apply left-2;
    }
    
    .slider-next {
      @apply right-2;
    }
    
    .view-all {
      @apply text-xs font-medium text-primary-600 dark:text-primary-400 hover:text-primary-800 dark:hover:text-primary-200 transition-colors duration-200;
    }
    
    /* Skeleton loading styles */
    .skeleton {
      @apply bg-gray-200 dark:bg-gray-700 animate-pulse rounded;
    }
    
    .skeleton-slide {
      @apply h-64 w-full;
    }
    
    .skeleton-card {
      @apply h-72 w-full;
    }
    
    /* Slider styles */
    .slider-container {
      @apply flex transition-transform duration-500 ease-in-out;
    }
    
    .slide {
      @apply flex-shrink-0 w-full relative;
    }
    
    .slide img {
      @apply w-full h-64 object-cover rounded-lg;
    }
    
    .slide-content {
      @apply absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-4 text-white rounded-b-lg;
    }
    
    .slide-title {
      @apply text-lg font-bold truncate;
    }
    
    .slide-info {
      @apply flex justify-between text-sm mt-1;
    }
    
    /* Card styles */
    .anime-card {
      @apply bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden transform transition-all duration-300 hover:-translate-y-1 hover:shadow-xl;
    }
    
    /* Detail page styles */
    .detail-header {
      @apply flex flex-col md:flex-row gap-6 mb-8;
    }
    
    .detail-cover {
      @apply w-full md:w-1/3;
    }
    
    .detail-cover img {
      @apply w-full rounded-lg shadow-md;
    }
    
    .detail-info {
      @apply w-full md:w-2/3;
    }
    
    .detail-title {
      @apply text-2xl font-bold mb-4;
    }
    
    .detail-meta {
      @apply flex flex-wrap gap-4 mb-4 text-sm text-gray-600 dark:text-gray-400;
    }
    
    .detail-genres {
      @apply flex flex-wrap gap-2 mb-4;
    }
    
    .genre-tag {
      @apply bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 px-2 py-1 rounded text-xs;
    }
    
    .detail-synopsis {
      @apply mb-6;
    }
    
    .detail-synopsis p {
      @apply text-gray-700 dark:text-gray-300 leading-relaxed;
    }
    
    .detail-actions {
      @apply flex gap-3 mb-4;
    }
    
    .chapters-list {
      @apply bg-white dark:bg-gray-800 rounded-lg shadow-md p-4;
    }
    
    .chapters-header {
      @apply text-lg font-bold mb-4;
    }
    
    .chapter-item {
      @apply flex justify-between items-center p-3 border-b border-gray-200 dark:border-gray-700 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-750 transition-colors;
    }
    
    .chapter-date {
      @apply text-sm text-gray-500 dark:text-gray-400;
    }
    
    /* Reader styles */
    .reader-container {
      @apply max-w-4xl mx-auto;
    }
    
    .reader-header {
      @apply flex flex-col sm:flex-row justify-between items-center mb-6 gap-4;
    }
    
    .reader-title {
      @apply text-xl font-bold text-center sm:text-left;
    }
    
    .reader-nav {
      @apply flex gap-2;
    }
    
    .reader-content {
      @apply bg-white dark:bg-gray-800 rounded-lg shadow-md p-4;
    }
    
    .reader-image {
      @apply w-full mb-4 rounded;
    }
    
    /* Error state */
    .error-state {
      @apply text-center py-12;
    }
    
    .error-icon {
      @apply text-4xl mb-4;
    }
    
    .error-title {
      @apply text-xl font-bold mb-2;
    }
    
    .error-message {
      @apply text-gray-600 dark:text-gray-400 mb-4;
    }
  </style>
</head>
<body class="bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 font-sans">
  <header class="bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700 sticky top-0 z-50 rounded-b-lg">
    <nav class="container mx-auto px-8 py-3">
      <div class="flex items-center justify-between">
        <a href="/" class="flex items-center">
          <img src="/images/logo.png" alt="ANIMAQU" class="h-7 w-auto rounded-sm">
          <span class="ml-2 text-lg font-bold text-gray-800 dark:text-white">ANIMAQU</span>
        </a>

        <!-- Search Bar for Comic Page -->
        <div class="flex-1 max-w-md mx-4 relative">
          <div class="relative">
            <input
              type="text"
              placeholder="Cari komik..."
              class="search-input"
              autocomplete="off"
            >
            <div class="absolute left-2.5 top-1/2 transform -translate-y-1/2 text-gray-400 dark:text-gray-500">
              <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="flex items-center space-x-3">
          <a href="/" class="btn btn-secondary text-xs px-3 py-1.5">Kembali ke Anime</a>
          <button id="darkModeToggle" class="p-1.5 rounded-lg bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200">
            <svg id="sunIcon" class="w-4 h-4 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
              <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"></path>
            </svg>
            <svg id="moonIcon" class="w-4 h-4 text-gray-300 hidden" fill="currentColor" viewBox="0 0 20 20">
              <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
            </svg>
          </button>
        </div>
      </div>
    </nav>
  </header>

  <main class="min-h-screen" style="margin-top: 5rem;">
    <div class="container mx-auto px-4 py-8">
      <!-- Home Page Content -->
      <div id="homePage">
        <!-- Slider/Banner -->
        <section class="slider relative overflow-hidden rounded-lg">
          <div id="sliderContainer" class="slider-container">
            <!-- Slider content will be populated by JavaScript -->
          </div>
          <button id="sliderPrev" class="slider-nav slider-prev">‚ùÆ</button>
          <button id="sliderNext" class="slider-nav slider-next">‚ùØ</button>
        </section>

        <!-- Latest Updates -->
        <section class="mt-8">
          <div class="section-title">
            <h2>üìñ Terbaru</h2>
            <a href="#" class="view-all" onclick="navigateToPage('latest'); return false;">Lihat Semua</a>
          </div>
          <div id="latestGrid" class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4 mt-4">
            <!-- Content will be populated by JavaScript -->
          </div>
        </section>

        <!-- Popular -->
        <section class="mt-8">
          <div class="section-title">
            <h2>üî• Populer</h2>
            <a href="#" class="view-all" onclick="navigateToPage('popular'); return false;">Lihat Semua</a>
          </div>
          <div id="popularGrid" class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4 mt-4">
            <!-- Content will be populated by JavaScript -->
          </div>
        </section>

        <!-- Top Rated -->
        <section class="mt-8">
          <div class="section-title">
            <h2>üèÜ Top Rated</h2>
            <a href="#" class="view-all" onclick="navigateToPage('top-weekly'); return false;">Lihat Semua</a>
          </div>
          <div id="topRatedGrid" class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4 mt-4">
            <!-- Content will be populated by JavaScript -->
          </div>
        </section>
      </div>

      <!-- Search Page Content -->
      <div id="searchPage" style="display: none;">
        <h1 class="text-2xl font-bold mb-4">Hasil Pencarian</h1>
        <div id="searchInfo" class="search-info mb-4"></div>
        <div id="searchGrid" class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4"></div>
      </div>

      <!-- Detail Page Content -->
      <div id="detailPage" style="display: none;">
        <div class="detail-container"></div>
      </div>

      <!-- Chapter Reader Content -->
      <div id="readerPage" style="display: none;">
        <div class="reader-container">
          <div class="reader-header">
            <div id="readerTitle" class="reader-title"></div>
            <div class="reader-nav">
              <button id="prevChapter" class="btn btn-secondary text-xs">‚ùÆ Previous</button>
              <button id="nextChapter" class="btn btn-secondary text-xs">Next ‚ùØ</button>
            </div>
          </div>
          <div id="readerContent" class="reader-content">
            <!-- Chapter content will be populated by JavaScript -->
          </div>
        </div>
      </div>
    </div>
  </main>

  <footer class="bg-gray-900 dark:bg-gray-950 text-white mt-12">
    <div class="container mx-auto px-4 py-6 text-center">
      <p class="text-sm">&copy; 2023 COMICKU. All rights reserved.</p>
    </div>
  </footer>

  <script>
    // Base URL API
    const BASE_URL = 'https://www.sankavollerei.com/comic';

    // State management
    let currentPage = 'home';
    let currentSliderIndex = 0;
    let sliderInterval;
    let searchQuery = '';
    let currentManhwaSlug = '';
    let currentChapterSlug = '';
    let chaptersList = [];

    // DOM Elements
    const homePage = document.getElementById('homePage');
    const searchPage = document.getElementById('searchPage');
    const detailPage = document.getElementById('detailPage');
    const readerPage = document.getElementById('readerPage');
    const themeToggle = document.getElementById('darkModeToggle');
    const searchInput = document.querySelector('.search-input');
    const sliderContainer = document.getElementById('sliderContainer');
    const sliderPrev = document.getElementById('sliderPrev');
    const sliderNext = document.getElementById('sliderNext');
    const latestGrid = document.getElementById('latestGrid');
    const popularGrid = document.getElementById('popularGrid');
    const topRatedGrid = document.getElementById('topRatedGrid');
    const searchGrid = document.getElementById('searchGrid');
    const searchInfo = document.getElementById('searchInfo');
    const prevChapter = document.getElementById('prevChapter');
    const nextChapter = document.getElementById('nextChapter');
    const readerTitle = document.getElementById('readerTitle');
    const readerContent = document.getElementById('readerContent');
    const sunIcon = document.getElementById('sunIcon');
    const moonIcon = document.getElementById('moonIcon');

    // Initialize the application
    function init() {
        // Load home page data
        loadHomePage();

        // Set up event listeners
        setupEventListeners();

        // Check for dark mode preference
        if (localStorage.getItem('theme') === 'dark' || (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
            document.documentElement.classList.add('dark');
            if(moonIcon) moonIcon.classList.remove('hidden');
            if(sunIcon) sunIcon.classList.add('hidden');
        }

        // Handle routing based on URL
        handleRouting();
    }

    // Set up event listeners
    function setupEventListeners() {
        // Theme toggle
        if(themeToggle) {
            themeToggle.addEventListener('click', () => {
                document.documentElement.classList.toggle('dark');
                if (document.documentElement.classList.contains('dark')) {
                    localStorage.setItem('theme', 'dark');
                    if(moonIcon) moonIcon.classList.remove('hidden');
                    if(sunIcon) sunIcon.classList.add('hidden');
                } else {
                    localStorage.setItem('theme', 'light');
                    if(moonIcon) moonIcon.classList.add('hidden');
                    if(sunIcon) sunIcon.classList.remove('hidden');
                }
            });
        }

        // Search functionality
        if (searchInput) {
            searchInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    searchQuery = searchInput.value.trim();
                    if (searchQuery) {
                        navigateToPage('search');
                        performSearch(searchQuery);
                    }
                }
            });
        }

        // Slider navigation
        if (sliderPrev) {
            sliderPrev.addEventListener('click', () => {
                navigateSlider(-1);
            });
        }

        if (sliderNext) {
            sliderNext.addEventListener('click', () => {
                navigateSlider(1);
            });
        }

        // Chapter navigation
        if (prevChapter) {
            prevChapter.addEventListener('click', loadPreviousChapter);
        }

        if (nextChapter) {
            nextChapter.addEventListener('click', loadNextChapter);
        }
    }

    // Handle routing based on URL
    function handleRouting() {
        const params = new URLSearchParams(window.location.search);

        if (params.get('search')) {
            searchQuery = params.get('search') || '';
            if(searchInput) searchInput.value = searchQuery;
            navigateToPage('search');
            if (searchQuery) performSearch(searchQuery);
        } else if (params.get('detail')) {
            currentManhwaSlug = params.get('detail') || '';
            navigateToPage('detail');
            loadManhwaDetail(currentManhwaSlug);
        } else if (params.get('chapter')) {
            currentChapterSlug = params.get('chapter') || '';
            navigateToPage('reader');
            loadChapter(currentChapterSlug);
        } else {
            navigateToPage('home');
        }
    }

    // Navigate between pages
    function navigateToPage(page) {
        // Hide all pages
        if (homePage) homePage.style.display = 'none';
        if (searchPage) searchPage.style.display = 'none';
        if (detailPage) detailPage.style.display = 'none';
        if (readerPage) readerPage.style.display = 'none';

        // Stop slider if leaving home page
        if (currentPage === 'home' && page !== 'home') {
            clearInterval(sliderInterval);
        }

        // Show the target page
        switch(page) {
            case 'home':
                if (homePage) homePage.style.display = 'block';
                currentPage = 'home';
                if (sliderContainer && sliderContainer.children.length > 0) {
                    startSlider();
                }
                break;
            case 'search':
                if (searchPage) searchPage.style.display = 'block';
                currentPage = 'search';
                break;
            case 'detail':
                if (detailPage) detailPage.style.display = 'block';
                currentPage = 'detail';
                break;
            case 'reader':
                if (readerPage) readerPage.style.display = 'block';
                currentPage = 'reader';
                break;
            case 'popular':
                if (searchPage) {
                    searchPage.style.display = 'block';
                    currentPage = 'popular';
                    document.querySelector('#searchPage h1').textContent = 'Manhwa Populer';
                    loadPopularPage();
                }
                break;
            case 'latest':
                if (searchPage) {
                    searchPage.style.display = 'block';
                    currentPage = 'latest';
                    document.querySelector('#searchPage h1').textContent = 'Manhwa Terbaru';
                    loadLatestPage();
                }
                break;
            case 'recommendations':
                if (searchPage) {
                    searchPage.style.display = 'block';
                    currentPage = 'recommendations';
                    document.querySelector('#searchPage h1').textContent = 'Rekomendasi Manhwa';
                    loadRecommendationsPage();
                }
                break;
            case 'top-weekly':
                if (searchPage) {
                    searchPage.style.display = 'block';
                    currentPage = 'top-weekly';
                    document.querySelector('#searchPage h1').textContent = 'Top Mingguan';
                    loadTopWeeklyPage();
                }
                break;
        }
    }

    // Load home page data
    async function loadHomePage() {
    try {
        showSkeletons();
        const response = await fetch(`${BASE_URL}/kiryuu/home`);
        const data = await response.json();

        if (data.success) {
            populateSlider(data.trending.slice(0, 5));
            const latestResponse = await fetch(`${BASE_URL}/kiryuu/latest`);
            const latestData = await latestResponse.json();

            if (latestData.success) {
                populateLatestGrid(latestData.results.slice(0, 12));
            } else {
                 showError('Gagal memuat data terbaru.');
            }
            populateGrid(popularGrid, data.popularManhwa.slice(0, 8));
            populateGrid(topRatedGrid, data.trending.slice(0, 8));
        } else {
            showError('Gagal memuat data home.');
        }
    } catch (error) {
        console.error('Error loading home page:', error);
        showError('Gagal memuat data. Silakan coba lagi.');
    }
    }

    // Show loading skeletons
    function showSkeletons() {
        if (sliderContainer) {
            sliderContainer.innerHTML = '';
            for (let i = 0; i < 3; i++) {
                const slide = document.createElement('div');
                slide.className = 'slide skeleton skeleton-slide';
                sliderContainer.appendChild(slide);
            }
        }
        const grids = [latestGrid, popularGrid, topRatedGrid];
        grids.forEach(grid => {
            if (grid) {
                grid.innerHTML = '';
                for (let i = 0; i < 8; i++) {
                    const card = document.createElement('div');
                    card.className = 'card skeleton skeleton-card';
                    grid.appendChild(card);
                }
            }
        });
    }

    // Populate slider with data
    function populateSlider(items) {
        if (!sliderContainer) return;
        sliderContainer.innerHTML = '';

        items.forEach(item => {
            const slide = document.createElement('div');
            slide.className = 'slide';

            slide.innerHTML = `
                <img src="${item.imageSrc}" alt="${item.title}">
                <div class="slide-content">
                    <div class="slide-title">${item.title}</div>
                    <div class="slide-info">
                        <span>‚≠ê ${item.rating}</span>
                        <span>${item.latestChapter}</span>
                    </div>
                </div>
            `;

            slide.addEventListener('click', () => {
                currentManhwaSlug = item.slug;
                navigateToPage('detail');
                loadManhwaDetail(item.slug);
            });

            sliderContainer.appendChild(slide);
        });

        if (currentPage === 'home') {
            startSlider();
        }
    }

    // Start slider auto-play
    function startSlider() {
        clearInterval(sliderInterval);
        currentSliderIndex = 0;
        updateSliderPosition();

        sliderInterval = setInterval(() => {
            navigateSlider(1);
        }, 5000);
    }

    // Navigate slider
    function navigateSlider(direction) {
        if (!sliderContainer) return;
        const slides = sliderContainer.children;
        currentSliderIndex = (currentSliderIndex + direction + slides.length) % slides.length;
        updateSliderPosition();

        clearInterval(sliderInterval);
        sliderInterval = setInterval(() => {
            navigateSlider(1);
        }, 5000);
    }

    // Update slider position
    function updateSliderPosition() {
        if (sliderContainer) {
            sliderContainer.style.transform = `translateX(-${currentSliderIndex * 100}%)`;
        }
    }

    // Populate latest grid
    function populateLatestGrid(items) {
        populateGrid(latestGrid, items);
    }

    // Populate generic grid
    function populateGrid(grid, items) {
        if (!grid) return;
        grid.innerHTML = '';

        items.forEach(item => {
            const imageUrl = item.imageSrc || item.image;
            const chapterInfo = item.latestChapter || item.chapter || 'N/A';
            const rating = item.rating || '??';
            const title = item.title || 'Untitled';

            const card = document.createElement('div');
            card.className = 'anime-card group bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden transform transition-all duration-300 hover:-translate-y-1 hover:shadow-xl';

            card.innerHTML = `
                <a href="#" class="block relative">
                    <div class="relative w-full h-72">
                        <img src="${imageUrl}" alt="Poster for ${title}" class="w-full h-full object-cover" onerror="this.onerror=null;this.src='https://placehold.co/400x600?text=No+Image';">
                        <div class="absolute inset-0 bg-black bg-opacity-40 group-hover:bg-opacity-20 transition-all duration-300"></div>
                        <div class="absolute top-2 right-2 bg-primary-600 text-white text-xs font-bold px-2 py-1 rounded-md">
                            <span>‚≠ê ${rating}</span>
                        </div>
                    </div>
                    <div class="p-4">
                        <h3 class="text-md font-semibold text-gray-800 dark:text-white truncate group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">${title}</h3>
                        <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">${chapterInfo}</p>
                    </div>
                </a>
            `;

            card.querySelector('a').addEventListener('click', (e) => {
                e.preventDefault();
                currentManhwaSlug = item.slug;
                navigateToPage('detail');
                loadManhwaDetail(item.slug);
            });

            grid.appendChild(card);
        });
    }

    // Perform search
    async function performSearch(query) {
        try {
            if (!searchGrid) return;
            searchGrid.innerHTML = '';
            for (let i = 0; i < 8; i++) {
                const card = document.createElement('div');
                card.className = 'card skeleton skeleton-card';
                searchGrid.appendChild(card);
            }

            if (searchInfo) searchInfo.textContent = `Mencari "${query}"...`;

            const response = await fetch(`${BASE_URL}/kiryuu/search/${encodeURIComponent(query)}`);
            const data = await response.json();

            if (data.success) {
                if (searchInfo) searchInfo.textContent = `Menampilkan ${data.seriesList.length} hasil untuk "${query}"`;
                populateGrid(searchGrid, data.seriesList);
            } else {
                if (searchInfo) searchInfo.textContent = `Tidak ada hasil untuk "${query}"`;
                searchGrid.innerHTML = '';
            }
        } catch (error) {
            console.error('Error performing search:', error);
            if (searchInfo) searchInfo.textContent = `Terjadi kesalahan saat mencari "${query}"`;
            if (searchGrid) searchGrid.innerHTML = '';
        }
    }

    // Load manhwa detail
    async function loadManhwaDetail(slug) {
        try {
            const detailContainer = document.querySelector('.detail-container');
            if (!detailContainer) return;
            detailContainer.innerHTML = '<div class="skeleton skeleton-card" style="height: 400px;"></div>';

            const response = await fetch(`${BASE_URL}/kiryuu/manga/${slug}`);
            const data = await response.json();

            if (data.success) {
                chaptersList = data.chapters || [];

                detailContainer.innerHTML = `
                    <div class="detail-header">
                        <div class="detail-cover">
                            <img src="${data.imageSrc}" alt="${data.title}">
                        </div>
                        <div class="detail-info">
                            <h1 class="detail-title">${data.title}</h1>
                            <div class="detail-meta">
                                <span class="detail-rating">‚≠ê ${data.rating}</span>
                                <span>${data.status}</span>
                                <span>${data.type}</span>
                                <span>${data.released}</span>
                            </div>
                            <div class="detail-genres">
                                ${data.genres.map(genre => `<span class="genre-tag">${genre.name}</span>`).join('')}
                            </div>
                            <div class="detail-synopsis">
                                <p>${data.synopsis}</p>
                            </div>
                            <div class="detail-actions">
                                <button class="btn btn-primary" id="readFirstChapter">
                                    Baca Chapter Pertama
                                </button>
                                <button class="btn btn-secondary" id="followManhwa">
                                    Ikuti
                                </button>
                            </div>
                            <div class="detail-meta">
                                <span>${data.followedBy}</span>
                            </div>
                        </div>
                    </div>
                    <div class="chapters-list">
                        <div class="chapters-header">Daftar Chapter</div>
                        ${chaptersList.map(chapter => `
                            <div class="chapter-item" data-slug="${chapter.slug}">
                                <span>${chapter.title}</span>
                                <span class="chapter-date">${chapter.date}</span>
                            </div>
                        `).join('')}
                    </div>
                `;

                document.querySelectorAll('.chapter-item').forEach(item => {
                    item.addEventListener('click', () => {
                        currentChapterSlug = item.getAttribute('data-slug');
                        navigateToPage('reader');
                        loadChapter(currentChapterSlug);
                    });
                });

                const readFirstChapterBtn = document.getElementById('readFirstChapter');
                if (readFirstChapterBtn) {
                    readFirstChapterBtn.addEventListener('click', () => {
                        if (chaptersList.length > 0) {
                            currentChapterSlug = chaptersList[chaptersList.length - 1].slug; // Read first chapter, which is last in the array
                            navigateToPage('reader');
                            loadChapter(currentChapterSlug);
                        }
                    });
                }
            } else {
                showError('Gagal memuat detail manhwa.');
            }
        } catch (error) {
            console.error('Error loading manhwa detail:', error);
            showError('Gagal memuat detail manhwa.');
        }
    }

    // Load chapter
    async function loadChapter(slug) {
        try {
            if (!readerContent) return;
            readerContent.innerHTML = '<div class="skeleton skeleton-card" style="height: 500px; margin-bottom: 10px;"></div>'.repeat(5);

            const response = await fetch(`${BASE_URL}/kiryuu/chapter/${slug}`);
            const data = await response.json();

            if (data.success) {
                if (readerTitle) readerTitle.textContent = data.title;

                readerContent.innerHTML = '';
                data.images.forEach(imageSrc => {
                    const img = document.createElement('img');
                    img.className = 'reader-image';
                    img.src = imageSrc;
                    img.alt = data.title;
                    readerContent.appendChild(img);
                });

                if (prevChapter) prevChapter.disabled = !data.prevSlug;
                if (nextChapter) nextChapter.disabled = !data.nextSlug;

                currentChapterSlug = slug;
            } else {
                showError('Gagal memuat chapter.');
            }
        } catch (error) {
            console.error('Error loading chapter:', error);
            showError('Gagal memuat chapter.');
        }
    }

    // Load previous chapter
    function loadPreviousChapter() {
        if (chaptersList.length > 0) {
            const currentIndex = chaptersList.findIndex(chapter => chapter.slug === currentChapterSlug);
            if (currentIndex > 0) {
                currentChapterSlug = chaptersList[currentIndex - 1].slug;
                loadChapter(currentChapterSlug);
            }
        }
    }

    // Load next chapter
    function loadNextChapter() {
        if (chaptersList.length > 0) {
            const currentIndex = chaptersList.findIndex(chapter => chapter.slug === currentChapterSlug);
            if (currentIndex < chaptersList.length - 1 && currentIndex !== -1) {
                currentChapterSlug = chaptersList[currentIndex + 1].slug;
                loadChapter(currentChapterSlug);
            }
        }
    }

    // Load popular page
    async function loadPopularPage() {
        try {
            if (!searchGrid) return;
            searchGrid.innerHTML = '';
            for (let i = 0; i < 8; i++) {
                searchGrid.innerHTML += '<div class="card skeleton skeleton-card"></div>';
            }
            if (searchInfo) searchInfo.textContent = 'Memuat manhwa populer...';
            const response = await fetch(`${BASE_URL}/kiryuu/popular`);
            const data = await response.json();
            if (data.success) {
                if (searchInfo) searchInfo.textContent = `Menampilkan ${data.results.length} manhwa populer`;
                populateGrid(searchGrid, data.results);
            } else {
                if (searchInfo) searchInfo.textContent = 'Gagal memuat manhwa populer';
                searchGrid.innerHTML = '';
            }
        } catch (error) {
            console.error('Error loading popular page:', error);
            if (searchInfo) searchInfo.textContent = 'Terjadi kesalahan saat memuat manhwa populer';
            if (searchGrid) searchGrid.innerHTML = '';
        }
    }

    // Load latest page
    async function loadLatestPage() {
        try {
            if (!searchGrid) return;
            searchGrid.innerHTML = '';
            for (let i = 0; i < 8; i++) {
                searchGrid.innerHTML += '<div class="card skeleton skeleton-card"></div>';
            }
            if (searchInfo) searchInfo.textContent = 'Memuat manhwa terbaru...';
            const response = await fetch(`${BASE_URL}/kiryuu/latest`);
            const data = await response.json();
            if (data.success) {
                if (searchInfo) searchInfo.textContent = `Menampilkan ${data.results.length} manhwa terbaru`;
                populateGrid(searchGrid, data.results);
            } else {
                if (searchInfo) searchInfo.textContent = 'Gagal memuat manhwa terbaru';
                searchGrid.innerHTML = '';
            }
        } catch (error) {
            console.error('Error loading latest page:', error);
            if (searchInfo) searchInfo.textContent = 'Terjadi kesalahan saat memuat manhwa terbaru';
            if (searchGrid) searchGrid.innerHTML = '';
        }
    }

    // Load recommendations page
    async function loadRecommendationsPage() {
        try {
            if (!searchGrid) return;
            searchGrid.innerHTML = '';
            for (let i = 0; i < 8; i++) {
                searchGrid.innerHTML += '<div class="card skeleton skeleton-card"></div>';
            }
            if (searchInfo) searchInfo.textContent = 'Memuat rekomendasi...';
            const response = await fetch(`${BASE_URL}/kiryuu/recommendations`);
            const data = await response.json();
            if (data.success) {
                if (searchInfo) searchInfo.textContent = `Menampilkan ${data.results.length} rekomendasi`;
                populateGrid(searchGrid, data.results);
            } else {
                if (searchInfo) searchInfo.textContent = 'Gagal memuat rekomendasi';
                searchGrid.innerHTML = '';
            }
        } catch (error) {
            console.error('Error loading recommendations page:', error);
            if (searchInfo) searchInfo.textContent = 'Terjadi kesalahan saat memuat rekomendasi';
            if (searchGrid) searchGrid.innerHTML = '';
        }
    }

    // Load top weekly page
    async function loadTopWeeklyPage() {
        try {
            if (!searchGrid) return;
            searchGrid.innerHTML = '';
            for (let i = 0; i < 8; i++) {
                searchGrid.innerHTML += '<div class="card skeleton skeleton-card"></div>';
            }
            if (searchInfo) searchInfo.textContent = 'Memuat top mingguan...';
            const response = await fetch(`${BASE_URL}/kiryuu/top-weekly`);
            const data = await response.json();
            if (data.success) {
                if (searchInfo) searchInfo.textContent = `Menampilkan ${data.recommendations.length} top mingguan`;
                populateGrid(searchGrid, data.recommendations);
            } else {
                if (searchInfo) searchInfo.textContent = 'Gagal memuat top mingguan';
                searchGrid.innerHTML = '';
            }
        } catch (error) {
            console.error('Error loading top weekly page:', error);
            if (searchInfo) searchInfo.textContent = 'Terjadi kesalahan saat memuat top mingguan';
            if (searchGrid) searchGrid.innerHTML = '';
        }
    }

    // Show error message
    function showError(message) {
        const container = document.querySelector('.container');
        if(container){
            const mainContent = container.querySelector('main .container');
            if (mainContent) {
                mainContent.innerHTML = `
                    <div class="error-state">
                        <div class="error-icon">‚ö†Ô∏è</div>
                        <div class="error-title">Terjadi Kesalahan</div>
                        <div class="error-message">${message}</div>
                        <button class="btn btn-primary" onclick="location.reload()">Coba Lagi</button>
                    </div>`;
            }
        }
    }

    // Initialize the application
    document.addEventListener('DOMContentLoaded', init);
  </script>
</body>
</html>            button#sliderPrev.slider-nav.slider-prev ‚ùÆ
            button#sliderNext.slider-nav.slider-next ‚ùØ

          // Latest Updates
          section.mt-8
            .section-title
              h2.text-2xl.font-bold üìñ Terbaru
              a.view-all(href="#", onclick="navigateToPage('latest'); return false;") Lihat Semua
            #latestGrid.grid.grid-cols-2.md-grid-cols-4.lg-grid-cols-6.gap-4.mt-4

          // Popular
          section.mt-8
            .section-title
              h2.text-2xl.font-bold üî• Populer
              a.view-all(href="#", onclick="navigateToPage('popular'); return false;") Lihat Semua
            #popularGrid.grid.grid-cols-2.md-grid-cols-4.lg-grid-cols-6.gap-4.mt-4

          // Top Rated
          section.mt-8
            .section-title
              h2.text-2xl.font-bold üèÜ Top Rated
              a.view-all(href="#", onclick="navigateToPage('top-weekly'); return false;") Lihat Semua
            #topRatedGrid.grid.grid-cols-2.md-grid-cols-4.lg-grid-cols-6.gap-4.mt-4

        // Search Page Content
        #searchPage(style="display: none;")
          h1.text-3xl.font-bold.mb-4 Hasil Pencarian
          #searchInfo.search-info.mb-4
          #searchGrid.grid.grid-cols-2.md-grid-cols-4.lg-grid-cols-6.gap-4

        // Detail Page Content
        #detailPage(style="display: none;")
          .detail-container

        // Chapter Reader Content
        #readerPage(style="display: none;")
          .reader-container
            .reader-header
              #readerTitle.reader-title
              .reader-nav
                button#prevChapter.btn.btn-secondary ‚ùÆ Previous Chapter
                button#nextChapter.btn.btn-secondary Next Chapter ‚ùØ
            #readerContent.reader-content

    footer(class="bg-gray-900 dark:bg-gray-950 text-white mt-12")
      div(class="container mx-auto px-4 py-8 text-center")
        p &copy; 2023 COMICKU. All rights reserved.

    script(src="/js/comic.js")
